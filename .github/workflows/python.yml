# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: Python

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          manylinux: auto
          working-directory: anise-py
          before-script-linux: |
            # Source: https://github.com/sfackler/rust-openssl/issues/2036#issuecomment-1724324145
            # If we're running on rhel centos, install needed packages.
            if command -v yum &> /dev/null; then
                yum update -y && yum install -y perl-core openssl openssl-devel pkgconfig libatomic

                # If we're running on i686 we need to symlink libatomic
                # in order to build openssl with -latomic flag.
                if [[ ! -d "/usr/lib64" ]]; then
                    ln -s /usr/lib/libatomic.so.1 /usr/lib/libatomic.so
                fi
            else
                # If we're running on debian-based system.
                apt update -y && apt-get install -y libssl-dev openssl pkg-config
            fi

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: anise-py/dist

      - name: pytest
        shell: bash
        env:
          RUST_BACKTRACE: 1
        run: |
          set -e && pwd && ls -lh anise-py
          pip install anise --find-links anise-py/dist --force-reinstall -vvv
          pip install pytest
          pytest

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: ${{ matrix.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: anise-py

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: anise-py/dist
      
      - name: pytest
        shell: bash
        env:
          RUST_BACKTRACE: 1
        run: |
          set -e
          pip install anise --find-links anise-py/dist --force-reinstall
          pip install pytest
          pytest

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: anise-py

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: anise-py/dist
      
      - name: pytest
        shell: bash
        env:
          RUST_BACKTRACE: 1
        run: |
          set -e && pwd && ls -lh anise-py
          pip install anise --find-links anise-py/dist --force-reinstall -vvv
          pip install pytest
          pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: anise-py

      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: anise-py/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
